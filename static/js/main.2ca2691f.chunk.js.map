{"version":3,"sources":["components/Pages/BookListItem/BookListItem.js","components/Spinner/Spinner.js","components/ErrorIndicator/ErrorIndicator.js","actions/index.js","components/BookStoreServiceContext/BookStoreServiceContext.js","components/HOC/WithBookStoreService.js","components/Pages/BookList/BookList.js","components/Pages/CartTable/CartTable.js","components/Pages/HomePage/HomePage.js","components/Pages/Header/Header.js","components/App/App.js","components/ErrorBoundry/ErrorBoundry.js","services/Book_store_service.js","reducers/index.js","store/store.js","index.js"],"names":["BookListItem","book","onAddedToCard","className","src","coverImage","alt","title","author","price","onClick","Spinner","ErrorIndicator","bookAddedToCart","bookId","type","payload","React","createContext","BookStoreServiceProvider","Provider","BookStoreServiceConsumer","Consumer","WithBookStoreService","Wrapped","props","book_store_service","BookListContainer","this","booksRequested","getBooks","then","data","booksLoaded","catch","err","booksError","loading","books","Component","BookList","map","key","id","connect","state","dispatch","newBooks","items","cartItems","orderTotal","onDecrease","onIncrease","onDelete","item","index","count","total","HomePage","numItems","reduce","result","nextItem","to","App","role","exact","path","component","CartTable","ErrorBoundry","hasErrorLifecycle","error","setState","children","Book_store_service","Promise","resolve","reject","setTimeout","initialState","reducer","action","newItem","currentBook","find","itemIndex","findIndex","slice","bookIdDeleted","itemDeletedIndex","itemAllRemove","bookIdIncrease","bookIncreaseInState","itemIncreaseIndex","itemIncrease","newItemIncrease","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.2ca2691f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './BookListItem.css'\r\n\r\nconst BookListItem = ({book, onAddedToCard}) => {\r\n    return (\r\n        <div className='BookListItem'>\r\n            <div className='BookCover'>\r\n                <img src={book.coverImage} alt='cover' />\r\n            </div>\r\n            <div className='BookDetails'>\r\n                <span className='BookTitle'>{book.title}</span>\r\n                <div className='BookAuthor'>{book.author}</div>\r\n                <div className='BookPrice'>${book.price}</div>\r\n                <button className='btn btn-info'  onClick={onAddedToCard}>\r\n                    Add to cart\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BookListItem","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return <h3>LOADING...</h3>\r\n}\r\n\r\nexport default Spinner","import React from 'react';\r\nimport './ErrorIndicator.css'\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>Error</div>\r\n}\r\n\r\nexport default ErrorIndicator","const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    }\r\n}\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    }\r\n}\r\n\r\nconst booksError = (err) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: err\r\n    }\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst AllBookRemoveFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOK_REMOVE_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst BookRemoveFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVE_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport {\r\n    booksLoaded,\r\n    booksRequested,\r\n    booksError,\r\n    bookAddedToCart,\r\n    AllBookRemoveFromCart,\r\n    BookRemoveFromCart\r\n}","import React from 'react';\r\n\r\nconst {\r\n        Provider: BookStoreServiceProvider,\r\n        Consumer: BookStoreServiceConsumer\r\n} = React.createContext()\r\n\r\nexport { BookStoreServiceProvider, BookStoreServiceConsumer}\r\n\r\n\r\n","import React from 'react';\r\nimport {BookStoreServiceConsumer} from '../BookStoreServiceContext/BookStoreServiceContext'\r\nconst WithBookStoreService = () => {\r\n    return (Wrapped) => {\r\n        return (props) => {\r\n            return (\r\n                <BookStoreServiceConsumer>\r\n                    {\r\n                        (book_store_service) => <Wrapped {...props} book_store_service  = {book_store_service} />  \r\n                    }\r\n                </BookStoreServiceConsumer>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default WithBookStoreService","import React, {Component} from 'react';\r\nimport BookListItem from '../BookListItem/BookListItem'\r\nimport Spinner from '../../Spinner/Spinner'\r\nimport ErrorIndicator from '../../ErrorIndicator/ErrorIndicator'\r\nimport {connect} from 'react-redux'\r\nimport { booksLoaded, booksRequested, booksError, bookAddedToCart} from '../../../actions/index'\r\nimport WithBookStoreService from '../../HOC/WithBookStoreService'\r\nimport './BookList.css'\r\n\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        this.props.booksRequested()\r\n        this.props.book_store_service.getBooks()\r\n            .then((data)=>this.props.booksLoaded(data))\r\n            .catch((err) => this.props.booksError(err));          \r\n    }\r\n  \r\n    render() {\r\n\r\n        if (this.props.loading) {\r\n            return <Spinner />\r\n        }\r\n        if (this.props.err) {\r\n            return <ErrorIndicator />\r\n        }\r\n        return <BookList books = {this.props.books} onAddedToCard={this.props.onAddedToCard} />\r\n    }\r\n}\r\n\r\nconst BookList = (props) => {\r\n   \r\n    return (\r\n        <ul className='Booklist'>\r\n            {\r\n                props.books.map((book) => {\r\n                    return (\r\n                    <li key={book.id}><BookListItem book={book} onAddedToCard={() => props.onAddedToCard(book.id)}/></li> \r\n                    )\r\n                })\r\n            }\r\n        </ul> \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {                      \r\n        books: state.books,\r\n        loading: state.loading,\r\n        err: state.err\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {                          \r\n        booksLoaded: (newBooks) => { \r\n            dispatch(booksLoaded(newBooks))\r\n        },     \r\n        booksRequested: () => { \r\n            dispatch(booksRequested())\r\n        },\r\n        booksError: (err) => { \r\n             dispatch(booksError(err))\r\n        },\r\n        onAddedToCard: (id) => { \r\n            dispatch(bookAddedToCart(id))\r\n       }\r\n    }                                        \r\n}\r\n\r\nexport default WithBookStoreService()(connect(mapStateToProps, mapDispatchToProps)(BookListContainer))","import React from 'react';\nimport {connect} from 'react-redux';\nimport { AllBookRemoveFromCart, BookRemoveFromCart, bookAddedToCart } from '../../../actions/index'\nimport './CartTable.css';\n\nconst CartTable = ({ items, orderTotal, onDecrease, onIncrease, onDelete}) => {\n  \n  const renderRow = (item, index) => {\n\n    return(\n      <tr key={item.id}>\n        <td>{index+1}</td>\n        <td>{item.title}</td>\n        <td>{item.count}</td>\n        <td>${item.total}</td>\n        <td>\n          <button onClick={() => onDelete(item.id) } className=\"btn btn-outline-danger btn-sm float-right\">\n            <i className=\"fa fa-trash-o\" />\n          </button>\n          <button onClick={() => onIncrease(item.id)} className=\"btn btn-outline-success btn-sm float-right\">\n            <i className=\"fa fa-plus-circle\" />\n          </button>\n          <button onClick={() => onDecrease(item.id)} className=\"btn btn-outline-warning btn-sm float-right\">\n            <i className=\"fa fa-minus-circle\" />\n          </button>\n        </td>\n      </tr>\n    )\n  }\n\n  return (\n    <div className=\"CardTable\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(renderRow)}\n        </tbody>\n      </table>\n\n      <div className=\"Total\">\n        Total: ${orderTotal}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {//определяет какие именно данные мы хотим получить от state\n  return {                        //через props\n      items: state.cartItems,\n      orderTotal: state.orderTotal\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {//для передачи действия в store для его измененния\n  return {                                // но чтобы передачть action  нам нужен  доступ к dispatch\n      onDecrease: (id) => { // через mapDispatchToProps\n        dispatch(BookRemoveFromCart(id))\n      },\n      onIncrease: (id) => { \n        dispatch(bookAddedToCart(id))\n      },\n      onDelete: (id) => { \n        dispatch(AllBookRemoveFromCart(id))\n      }\n  }                                        \n}\n\n\n// альтернатива этому:\n/*const mapDispatchToProps = { //через actioncreater\n  booksLoaded\n}*/\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable)\n\n","import React from 'react';\r\nimport BookListContainer from '../BookList/BookList'\r\nimport CartTable from '../CartTable/CartTable'\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <BookListContainer />\r\n            <CartTable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react';\r\nimport './Header.css';\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = ({ numItems, orderTotal}) => {\r\n  return (\r\n    <header className=\"Header row\">\r\n      <Link to='/' className=\"Logo text-dark\" >BookStore</Link>\r\n      <Link to='/cart_page'className=\"ShoppingCart\">\r\n        <i className=\"CartIcon fa fa-shopping-cart\" />\r\n        {numItems} items (${orderTotal})\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {//определяет какие именно данные мы хотим получить от state\r\n  return {                        //через props\r\n      orderTotal: state.orderTotal,\r\n      numItems: state.cartItems.reduce(((result, nextItem) => result + nextItem.count),0)\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Header)","import React from 'react';\r\nimport HomePage from '../Pages/HomePage/HomePage'\r\nimport CartTable from '../Pages/CartTable/CartTable'\r\nimport Header from '../Pages/Header/Header'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n\r\n    \r\n    return (\r\n        <main role='main' className='container'>\r\n            <Header/>\r\n            <Route  exact path ='/' component={HomePage} /> \r\n            <Route  exact path ='/book_store-react' component={HomePage} /> \r\n            <Route  path ='/cart_page'component={CartTable} /> \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App","import React, {Component} from 'react';\r\nimport ErrorIndicator from '../ErrorIndicator/ErrorIndicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state = {\r\n        hasErrorLifecycle: false\r\n    }\r\n\r\n    componentDidCatch(error,) {\r\n        this.setState({\r\n            hasErrorLifecycle: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasErrorLifecycle) return (\r\n            <ErrorIndicator />\r\n        )\r\n        return this.props.children\r\n    }\r\n}\r\n    \r\n   \r\n \r\n\r\n\r\n","export default class Book_store_service {\r\n    data = [\r\n        { id: 1, title: 'Java Script', author: 'Susan J. Fowler', price: 32, coverImage: 'https://img.yakaboo.ua/media/catalog/product/cache/1/image/398x565/234c7c011ba026e66d29567e1be1d1f7/1/0/1019046801.jpg'},\r\n        { id: 2, title: 'Angular', author: 'Michael T. Forest', price: 18, coverImage: 'https://proglib.io/wp-content/uploads/2017/05/orm_front_cover.jpg'},\r\n        { id: 3, title: 'React', author: 'Ivanna L. Sunny', price: 50, coverImage: 'https://www.kv.by/sites/default/files/styles/post_picture/public/pictures/userpictures/2019/06/18/1/b02.jpg?itok=DCvgxY6e'}\r\n    ]\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve(this.data)\r\n            }, 1000)\r\n        }) \r\n    }\r\n}\r\n    \r\n","const initialState = {\r\n    books: [],\r\n    loading: true,\r\n    err: null,\r\n    cartItems: [],\r\n    orderTotal: 0\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                books: action.payload,\r\n                loading: false,\r\n                err: null\r\n            }\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: true,\r\n                err: null\r\n            }\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                ...state,\r\n                books: [],\r\n                loading: false,\r\n                err: action.payload\r\n            }\r\n            \r\n        case 'BOOK_ADDED_TO_CART':\r\n            const bookId = action.payload\r\n            const currentBook = state.books.find((item) => item.id === bookId )\r\n            const itemIndex = state.cartItems.findIndex((item) => item.id === bookId )\r\n            const item = state.cartItems[itemIndex]\r\n            let newItem;\r\n\r\n            if (item) { \r\n\r\n                newItem = {\r\n                    ...item,\r\n                    count: item.count + 1,\r\n                    total: item.total + currentBook.price\r\n                }\r\n                return {\r\n                    ...state,\r\n                    orderTotal: state.orderTotal + currentBook.price,\r\n                    cartItems:  [\r\n                        ...state.cartItems.slice(0, itemIndex),\r\n                        newItem,\r\n                        ...state.cartItems.slice(itemIndex + 1),\r\n                    ]\r\n                }\r\n            } else { \r\n                newItem = {\r\n                    id: currentBook.id,\r\n                    title: currentBook.title,\r\n                    count: 1,\r\n                    total: currentBook.price\r\n                }\r\n                return {\r\n                    ...state,\r\n                    orderTotal: state.orderTotal + currentBook.price,\r\n                    cartItems: [\r\n                        ...state.cartItems,\r\n                        newItem\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case'ALL_BOOK_REMOVE_FROM_CART':\r\n            const bookIdDeleted = action.payload\r\n            const itemDeletedIndex = state.cartItems.findIndex((item) => item.id === bookIdDeleted )\r\n            const itemAllRemove = state.cartItems[itemDeletedIndex]\r\n                \r\n                return {\r\n                    ...state,\r\n                    orderTotal: state.orderTotal - itemAllRemove.total,\r\n                    cartItems:  [\r\n                        ...state.cartItems.slice(0, itemDeletedIndex),\r\n                        ...state.cartItems.slice(itemDeletedIndex + 1),\r\n                    ]\r\n                }\r\n          \r\n        case'BOOK_REMOVE_FROM_CART':\r\n            const bookIdIncrease = action.payload\r\n            const bookIncreaseInState = state.books.find((item) => item.id === bookIdIncrease )\r\n            const itemIncreaseIndex = state.cartItems.findIndex((item) => item.id === bookIdIncrease )\r\n            const itemIncrease = state.cartItems[itemIncreaseIndex]\r\n            \r\n            if ( itemIncrease.count > 1 ) {\r\n                let newItemIncrease = {\r\n                    ...itemIncrease,\r\n                    count: itemIncrease.count - 1,\r\n                    total: itemIncrease.total - bookIncreaseInState.price\r\n                }\r\n              \r\n                return {\r\n                    ...state,\r\n                    orderTotal: state.orderTotal - bookIncreaseInState.price,\r\n                    cartItems:  [\r\n                        ...state.cartItems.slice(0, itemIncreaseIndex),\r\n                        newItemIncrease,\r\n                        ...state.cartItems.slice(itemIncreaseIndex + 1),\r\n                    ]\r\n                }\r\n                        \r\n            } else {\r\n                 \r\n                return {\r\n                    ...state,\r\n                    orderTotal: state.orderTotal - bookIncreaseInState.price,\r\n                    cartItems:[\r\n                        ...state.cartItems.slice(0, itemIncreaseIndex),\r\n                        ...state.cartItems.slice(itemIncreaseIndex + 1)\r\n                    ]\r\n                }\r\n                    \r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer ","import { createStore } from 'redux'\r\nimport reducer from '../reducers/index.js'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './components/App/App';\nimport ErrorBoundry from './components/ErrorBoundry/ErrorBoundry';\nimport Book_store_service from './services/Book_store_service';\nimport {BookStoreServiceProvider} from './components/BookStoreServiceContext/BookStoreServiceContext'\nimport store from './store/store'\nconst book_store_service = new Book_store_service();\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <BookStoreServiceProvider value = {book_store_service}>\n                <Router>\n                    <App />\n\n                </Router>\n            </BookStoreServiceProvider>\n        </ErrorBoundry>\n    </Provider>,\n    document.getElementById('root')\n)\n\n"],"sourceRoot":""}